Input
    =   [\n\r]* Line EOF
    ;
Line
    =   Force Space Propositional+ { lineProcessed }
    ;
Force
    =   Representatives / Directives / Commissives /
        Expressives / Declaratives
    ;
Representatives
    =   "ASSERT" / "INFORM" 
    ;
Directives
    =   "REQUEST" 
    ;
Commissives
    =   "CONSENT" 
    ;
Expressives
    =   "APOLOGIZE" / "THANK" / "COMPLAIN" 
    ;
Declaratives
    =   "DECLARE" 
    ;
Propositional
    =   StringLiteral { getPropositional }
    ;

StringLiteral
    = "\"" (Escape / !["\\\n\r] _)* "\""
    ;
Escape
    = "\\" ([btnfr"'\\] / OctalEscape / UnicodeEscape)
    ;
OctalEscape
    = [0-3][0-7][0-7]
    / [0-7][0-7]
    / [0-7]
    ;
UnicodeEscape
    = "u"+ HexDigit HexDigit HexDigit HexDigit
    ;
HexDigit
    = [a-f] / [A-F] / [0-9]
    ;

Space 
    =   " " / "\t" / "\f" / EOL 
    ;
EOL 
    =   "\r" / "\n" 
    ;
EOF     
    =   !_ <end of file> 
    ;
